diff --git a/Framework/PythonInterface/mantid/simpleapi.py b/Framework/PythonInterface/mantid/simpleapi.py
index 56fa350cb66..9e1ad60e668 100644
--- a/Framework/PythonInterface/mantid/simpleapi.py
+++ b/Framework/PythonInterface/mantid/simpleapi.py
@@ -36,34 +36,34 @@ from dateutil.parser import parse as parse_date
 import os
 import sys
 
-import mantid
+#import mantid
 
 # This is a simple API so give access to the aliases by default as well
-from mantid import api as _api, kernel as _kernel
-from mantid import apiVersion  # noqa: F401
-from mantid.kernel import plugins as _plugin_helper
-from mantid.kernel.funcinspect import (
+from . import api as _api, kernel as _kernel
+from . import apiVersion  # noqa: F401
+from .kernel import plugins as _plugin_helper
+from .kernel.funcinspect import (
     customise_func as _customise_func,
     lhs_info as _lhs_info,
     LazyFunctionSignature,
 )
 
 # register matplotlib projection
-try:
-    from mantid import plots
-    from mantid.plots._compatability import plotSpectrum, plotBin
-except ImportError:
-
-    def notSupported(*args, **kwargs):
-        raise ModuleNotFoundError("Plotting is not supported by default. Please install matplotlib to enable plotting.")
-
-    plots = notSupported
-    plotSpectrum = notSupported
-    plotBin = notSupported
+#try:
+#    from mantid import plots
+#    from mantid.plots._compatability import plotSpectrum, plotBin
+#except ImportError:
+#
+#    def notSupported(*args, **kwargs):
+#        raise ModuleNotFoundError("Plotting is not supported by default. Please install matplotlib to enable plotting.")
+#
+#    plots = notSupported
+#    plotSpectrum = notSupported
+#    plotBin = notSupported
 
-from mantid.kernel._aliases import *
-from mantid.api._aliases import *
-from mantid.fitfunctions import *
+from .kernel import *
+from .api import *
+from .fitfunctions import *
 
 MODULE_NAME = "simpleapi"
 
@@ -1128,6 +1128,7 @@ def _create_algorithm_object(name, version=-1, startProgress=None, endProgress=N
     :param version A int version number
     """
     import inspect
+    from .api import AlgorithmManager
 
     parent = _find_parent_pythonalgorithm(inspect.currentframe())
     if parent is not None:
@@ -1231,7 +1232,7 @@ def _translate():
     for each of them
     :returns: a list of the name of new function calls
     """
-    from mantid.api import AlgorithmFactory, AlgorithmManager
+    from .api import AlgorithmFactory, AlgorithmManager
 
     new_func_attrs = []
     # Method names mapped to their algorithm names. Used to detect multiple copies of same method name
@@ -1317,7 +1318,7 @@ _translate()
 
 # Load the Python plugins
 # The exported C++ plugins
-from . import _plugins  # noqa
+#from . import _plugins  # noqa
 
 # Now the algorithms
 # There is a chicken and egg problem with what we want to achieve here.
@@ -1332,7 +1333,7 @@ from . import _plugins  # noqa
 # Set the .simpleapi attribute on the 'mantid' module before importing
 # the plugins. Python usual does this once the module has been fully imported
 # but we need to do this earlier
-setattr(mantid, MODULE_NAME, sys.modules["mantid.{}".format(MODULE_NAME)])
+#setattr(micromantid, MODULE_NAME, sys.modules["micromantid.{}".format(MODULE_NAME)])
 try:
     _user_key = "user.python.plugins.directories"
     _user_plugin_dirs = _plugin_helper.get_plugin_paths_as_set(_user_key)
@@ -1385,5 +1386,5 @@ try:
 except Exception:
     # If an error gets raised remove the attribute to be consistent
     # with standard python behaviour and reraise the exception
-    delattr(mantid, MODULE_NAME)
+    #delattr(mantid, MODULE_NAME)
     raise
diff --git a/Framework/PythonInterface/mantid/api/_workspaceops.py b/Framework/PythonInterface/mantid/api/_workspaceops.py
index 919408d4a81..3c2da1e5796 100644
--- a/Framework/PythonInterface/mantid/api/_workspaceops.py
+++ b/Framework/PythonInterface/mantid/api/_workspaceops.py
@@ -13,8 +13,8 @@ It is intended for internal use.
 
 import inspect as _inspect
 
-from mantid.api import AnalysisDataServiceImpl, ITableWorkspace, Workspace, WorkspaceGroup, performBinaryOp
-from mantid.kernel.funcinspect import customise_func, lhs_info, LazyMethodSignature
+from . import AnalysisDataServiceImpl, ITableWorkspace, Workspace, WorkspaceGroup, performBinaryOp
+from ..kernel.funcinspect import customise_func, lhs_info, LazyMethodSignature
 
 
 # ------------------------------------------------------------------------------
@@ -155,7 +155,7 @@ def _do_unary_operation(op, self, lhs_vars):
             their names as the first and second element respectively
     """
     global _workspace_op_tmps
-    import mantid.simpleapi as simpleapi
+    from .. import simpleapi
 
     if lhs_vars[0] > 0:
         # Assume the first and clear the temporaries as this
@@ -240,7 +240,7 @@ def attach_func_as_method(name, func_obj, self_param_name, algm_name, workspace_
     customise_func(_method_impl, func_obj.__name__, LazyMethodSignature(alg_name=algm_name), func_obj.__doc__)
 
     if workspace_types or len(workspace_types) > 0:
-        from mantid import api
+        from .. import api
 
         for typename in workspace_types:
             cls = getattr(api, typename)
diff --git a/Framework/PythonInterface/mantid/api/_adsimports.py b/Framework/PythonInterface/mantid/api/_adsimports.py
index 7d9b61ee09e..dfe3b2e2f56 100644
--- a/Framework/PythonInterface/mantid/api/_adsimports.py
+++ b/Framework/PythonInterface/mantid/api/_adsimports.py
@@ -15,7 +15,7 @@ The function is also attached to the AnalysisDataService and named importAll.
 
 """
 
-from mantid.api import AnalysisDataServiceImpl
+from . import AnalysisDataServiceImpl
 import inspect as _inspect
 import keyword as _keyword
 import re as _re
diff --git a/Framework/PythonInterface/mantid/fitfunctions.py b/Framework/PythonInterface/mantid/fitfunctions.py
index cddb03917a9..c4e502f1be0 100644
--- a/Framework/PythonInterface/mantid/fitfunctions.py
+++ b/Framework/PythonInterface/mantid/fitfunctions.py
@@ -4,7 +4,7 @@
 #   NScD Oak Ridge National Laboratory, European Spallation Source,
 #   Institut Laue - Langevin & CSNS, Institute of High Energy Physics, CAS
 # SPDX - License - Identifier: GPL - 3.0 +
-from mantid.api import FunctionFactory, Workspace, AlgorithmManager, IFunction1D
+from .api import FunctionFactory, Workspace, AlgorithmManager, IFunction1D
 import numpy as np
 
 
diff --git a/Framework/PythonInterface/mantid/kernel/AmendConfig.py b/Framework/PythonInterface/mantid/kernel/AmendConfig.py
index 6f9a9cce80a..6127fd46521 100644
--- a/Framework/PythonInterface/mantid/kernel/AmendConfig.py
+++ b/Framework/PythonInterface/mantid/kernel/AmendConfig.py
@@ -9,7 +9,7 @@ from contextlib import contextmanager
 from copy import deepcopy
 from typing import Union
 
-from mantid.kernel import ConfigService
+from . import ConfigService
 from . import logger
 
 
