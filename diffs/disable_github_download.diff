diff --git a/Framework/DataHandling/inc/MantidDataHandling/CheckMantidVersion.h b/Framework/DataHandling/inc/MantidDataHandling/CheckMantidVersion.h
index 31eb55e3a02..a1988f90228 100644
--- a/Framework/DataHandling/inc/MantidDataHandling/CheckMantidVersion.h
+++ b/Framework/DataHandling/inc/MantidDataHandling/CheckMantidVersion.h
@@ -23,7 +23,7 @@ public:
   const std::string summary() const override;
 
 protected:
-  virtual std::string getVersionsFromGitHub(const std::string &url);
+//virtual std::string getVersionsFromGitHub(const std::string &url);
   virtual std::string getCurrentVersion() const;
   std::vector<int> splitVersionString(const std::string &versionString) const;
 
diff --git a/Framework/DataHandling/src/CheckMantidVersion.cpp b/Framework/DataHandling/src/CheckMantidVersion.cpp
index ca61c64f21a..a62f8d73f0e 100644
--- a/Framework/DataHandling/src/CheckMantidVersion.cpp
+++ b/Framework/DataHandling/src/CheckMantidVersion.cpp
@@ -7,7 +7,7 @@
 #include "MantidDataHandling/CheckMantidVersion.h"
 #include "MantidJson/Json.h"
 #include "MantidKernel/ConfigService.h"
-#include "MantidKernel/GitHubApiHelper.h"
+//#include "MantidKernel/GitHubApiHelper.h"
 #include "MantidKernel/MantidVersion.h"
 #include "MantidKernel/Strings.h"
 
@@ -58,7 +58,7 @@ void CheckMantidVersion::exec() {
   std::string currentVersion = getCurrentVersion();
   setProperty("CurrentVersion", currentVersion);
   std::string mostRecentVersion;
-
+/*
   std::string gitHubReleaseUrl = ConfigService::Instance().getString("CheckMantidVersion.GitHubReleaseURL");
   if (gitHubReleaseUrl.empty()) {
     gitHubReleaseUrl = "https://api.github.com/repos/mantidproject/mantid/releases/latest";
@@ -128,6 +128,9 @@ void CheckMantidVersion::exec() {
 
   setProperty("MostRecentVersion", mostRecentVersion);
   setProperty("IsNewVersionAvailable", isNewVersionAvailable);
+*/
+  setProperty("MostRecentVersion", currentVersion);
+  setProperty("IsNewVersionAvailable", 0);
 }
 
 /** Cleans the tag name from github to make it similar to that from
@@ -157,6 +160,7 @@ std::string CheckMantidVersion::cleanVersionTag(const std::string &versionTag) c
  * @param versionString Something like "2.3.4"
  * @returns a vector of [2,3,4]
  */
+/*
 std::vector<int> CheckMantidVersion::splitVersionString(const std::string &versionString) const {
   std::vector<int> versionNumbers;
   // Discard suffix from release candidate version numbers.
@@ -182,12 +186,14 @@ std::vector<int> CheckMantidVersion::splitVersionString(const std::string &versi
   }
   return versionNumbers;
 }
+*/
 
 /** Compare two version strings, tests if the gitHubVersion is more recent
  * @param localVersion Something like "2.3.4"
  * @param gitHubVersion Something like "2.3.4"
  * @returns True if gitHubVersion is more recent
  */
+/*
 bool CheckMantidVersion::isVersionMoreRecent(const std::string &localVersion, const std::string &gitHubVersion) const {
   auto localVersionParts = splitVersionString(localVersion);
   auto gitHubVersionParts = splitVersionString(gitHubVersion);
@@ -216,13 +222,14 @@ bool CheckMantidVersion::isVersionMoreRecent(const std::string &localVersion, co
   }
   return false;
 }
-
+*/
 /** Gets the version json for the most recent release from gitHub
 
 @param url : The url to use
 @exception Mantid::Kernel::Exception::InternetError : For any unexpected
 behaviour.
 */
+/*
 std::string CheckMantidVersion::getVersionsFromGitHub(const std::string &url) {
 
   Kernel::GitHubApiHelper inetHelper;
@@ -237,6 +244,7 @@ std::string CheckMantidVersion::getVersionsFromGitHub(const std::string &url) {
 
   return retVal;
 }
+*/
 /** Gets the version of this Mantid
 @returns a string of the form "1.2.3[.4]"
 */
